// <auto-generated />
using System;
using EmployeeManagement.API.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240107033218_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagement.API.Models.AuthUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("'00000000-0000-0000-0000-000000000000'");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("'00000000-0000-0000-0000-000000000000'");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a61c0906-b308-4f6e-b860-28f4e3ee8713"),
                            CreatedAt = new DateTime(2024, 1, 7, 11, 32, 18, 164, DateTimeKind.Local).AddTicks(8907),
                            CreatedBy = new Guid("a61c0906-b308-4f6e-b860-28f4e3ee8713"),
                            Email = "faisal@gmail.com",
                            FirstName = "Faisal",
                            LastName = "Shahzad",
                            Password = "Faisal@123",
                            Salt = "LKDJ03230"
                        },
                        new
                        {
                            Id = new Guid("cfae8354-c7f7-4bd7-af31-43fa991b078e"),
                            CreatedAt = new DateTime(2024, 1, 7, 11, 32, 18, 164, DateTimeKind.Local).AddTicks(8918),
                            CreatedBy = new Guid("a61c0906-b308-4f6e-b860-28f4e3ee8713"),
                            Email = "tuan@gmail.com",
                            FirstName = "Le",
                            LastName = "Tuan",
                            Password = "Faisal@123",
                            Salt = "LKDJ03230"
                        },
                        new
                        {
                            Id = new Guid("d0413c86-36c6-486b-982d-b13fa76b90b9"),
                            CreatedAt = new DateTime(2024, 1, 7, 11, 32, 18, 164, DateTimeKind.Local).AddTicks(8921),
                            CreatedBy = new Guid("a61c0906-b308-4f6e-b860-28f4e3ee8713"),
                            Email = "marc@gmail.com",
                            FirstName = "Marc",
                            LastName = "Josha",
                            Password = "Faisal@123",
                            Salt = "LKDJ03230"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.API.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("'00000000-0000-0000-0000-000000000000'");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hobbies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillSet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("'00000000-0000-0000-0000-000000000000'");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("531fd700-37c7-47d6-9055-8474f62be903"),
                            CreatedAt = new DateTime(2024, 1, 7, 11, 32, 18, 164, DateTimeKind.Local).AddTicks(8996),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "someone@example.com",
                            Hobbies = "PLaying Games",
                            PhoneNumber = "+60182458049",
                            SkillSet = "AspNet, Angular, React",
                            UpdatedAt = new DateTime(2024, 1, 7, 11, 32, 18, 164, DateTimeKind.Local).AddTicks(8997),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "JohnDoe"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
